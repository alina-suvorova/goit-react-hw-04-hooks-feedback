{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Notification.js","components/Statistics/Statistics.js","components/Feedback.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","Button","variant","type","name","onClick","style","marginRight","Section","title","children","className","section","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","span","Math","floor","Feedback","state","e","target","setState","prev","countTotalFeedback","bind","this","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJACAA,EAAOC,QAAU,CAAC,QAAU,2B,iMCabC,EAXS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAE/B,OACI,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,SAASC,KAAMJ,EAAqBK,QAAST,EAAiBU,MAAO,CAACC,YAAa,QAApH,SAA8HP,GAAjEA,S,iBCI9DQ,EATC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,0BAASC,UAAWL,IAAMM,QAA1B,UACI,6BAAKH,IACJC,MCCEG,EANM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,6BAAKA,K,iBCYEC,EAZI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,gCACI,8BAAG,sBAAMT,UAAWL,IAAMe,KAAvB,kBAAH,KAA8CL,KAC9C,8BAAG,sBAAML,UAAWL,IAAMe,KAAvB,qBAAH,KAAiDJ,KACjD,8BAAG,sBAAMN,UAAWL,IAAMe,KAAvB,iBAAH,KAA6CH,KAC7C,8BAAG,sBAAMP,UAAWL,IAAMe,KAAvB,mBAAH,KAA+CF,KAC/C,8BAAG,sBAAMR,UAAWL,IAAMe,KAAvB,+BAAH,KAA2DD,EAAqBE,KAAKC,MAAMH,GAAsB,EAAjH,YC6CGI,E,kDAzCT,aAAe,IAAD,8BACZ,gBANJC,MAAQ,CACJT,KAAM,EACNC,QAAS,EACTC,IAAK,GAEO,EAMhBtB,gBAAkB,SAAC8B,GACf,IAAOtB,EAAQsB,EAAEC,OAAVvB,KACP,EAAKwB,UAAS,SAACC,GAAD,sBAAazB,EAAOyB,EAAKzB,GAAQ,MAC/C,EAAK0B,sBANL,EAAKlC,gBAAkB,EAAKA,gBAAgBmC,KAArB,gBAHX,E,sDAWhB,SAAmBf,EAAMC,EAASC,GAC9B,OAAOF,EAAOC,EAAUC,I,6CAE5B,SAAgCF,EAAMG,GACnC,OAAOH,EAAOG,EAAQ,M,oBAEzB,WACI,MAA6Ba,KAAKP,MAA3BT,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAChBC,EAAQa,KAAKF,mBAAmBd,EAAMC,EAASC,GAC/CE,EAAqBY,KAAKC,gCAAgCjB,EAAMG,GACtE,OACI,qCACI,cAAC,EAAD,CAASV,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBd,QAASqC,KAAKP,MAAO7B,gBAAiBoC,KAAKpC,oBAEhE,cAAC,EAAD,CAASa,MAAM,aAAf,SACKU,EACD,cAAC,EAAD,CACIH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACxB,cAAC,EAAD,CAAcN,QAAQ,+B,GAzCnBoB,aCERC,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.140fc0ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__I4IJ2\"};","import Button from '@material-ui/core/Button';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {Object.keys(options).map((option)=>\r\n                <Button variant=\"contained\" type=\"button\" name={option} key={option} onClick={onLeaveFeedback} style={{marginRight: \"10px\"}}>{option}</Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css'\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section className={style.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <h2>{message}</h2>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}","import { ClassNames } from '@emotion/react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <div>\r\n            <p><span className={style.span}>Good</span>: {good}</p>\r\n            <p><span className={style.span}>Neutral</span>: {neutral}</p>\r\n            <p><span className={style.span}>Bad</span>: {bad}</p>\r\n            <p><span className={style.span}>Total</span>: {total}</p>\r\n            <p><span className={style.span}>Positive feedback</span>: {positivePercentage ? Math.floor(positivePercentage) : 0} %</p>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import React, { Component } from 'react'\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions'\r\nimport Section from './Section/Section';\r\nimport Notification from './Statistics/Notification';\r\nimport Statistics from './Statistics/Statistics'\r\n\r\n\r\n\r\nclass Feedback extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n      }\r\n      constructor() {\r\n        super();\r\n    \r\n        this.onLeaveFeedback = this.onLeaveFeedback.bind(this);\r\n      }\r\n\r\n    onLeaveFeedback = (e) => {\r\n        const {name} = e.target\r\n        this.setState((prev) => ({[name]: prev[name] + 1}))\r\n        this.countTotalFeedback()\r\n    } \r\n    countTotalFeedback(good, neutral, bad) {\r\n        return good + neutral + bad;        \r\n    }\r\n    countPositiveFeedbackPercentage(good, total) {\r\n       return good / total * 100\r\n    }\r\n    render() {\r\n        const {good, neutral, bad} = this.state\r\n        const total = this.countTotalFeedback(good, neutral, bad)\r\n        const positivePercentage = this.countPositiveFeedbackPercentage(good, total)\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {total ? \r\n                    <Statistics \r\n                        good={good} \r\n                        neutral={neutral} \r\n                        bad={bad} \r\n                        total={total} \r\n                        positivePercentage={positivePercentage} /> :\r\n                    <Notification message=\"No feedback given\"/> }\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback;\r\n","import './App.css';\r\n\r\nimport Feedback from './components/Feedback';\r\n\r\nfunction App() {\r\n  return (\r\n    <Feedback/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}